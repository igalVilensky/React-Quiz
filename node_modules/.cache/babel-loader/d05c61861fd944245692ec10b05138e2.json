{"ast":null,"code":"var _jsxFileName = \"/home/igalvilensky/quiz/react-quiz/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { fetchQQuestions } from \"./API\";\n/**\n *  ! Types\n **/\n\nimport { Difficulty } from \"./API\";\n/**\n *  ! Components\n **/\n\nimport QCard from \"./components/QCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(questions);\n  console.log(loading, gameOver); // console.log(fetchQQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      /**\n       *  ! Users answer\n       **/\n      const answer = e.currentTarget.value;\n      /**\n       *  ! Check value against correct answer\n       **/\n\n      const correct = questions[number].correct_answer === answer;\n      /**\n       *  ! Add score if answer is correct\n       **/\n\n      if (correct) setScore(prev => prev + 1);\n      /**\n       *  ! Save answer in users answer array\n       **/\n\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers();\n    }\n  };\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"REACT QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startQuiz,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QCard, {\n      questionNr: number + 1,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answers,\n      userAnswer: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), !loading && !gameOver && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"\",\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQQuestions","Difficulty","QCard","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","startQuiz","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","length","answers","undefined"],"sources":["/home/igalvilensky/quiz/react-quiz/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchQQuestions } from \"./API\";\n/**\n *  ! Types\n **/\nimport { QuestionState, Difficulty } from \"./API\";\n/**\n *  ! Components\n **/\nimport QCard from \"./components/QCard\";\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(questions);\n  console.log(loading, gameOver);\n\n  // console.log(fetchQQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      /**\n       *  ! Users answer\n       **/\n\n      const answer = e.currentTarget.value;\n\n      /**\n       *  ! Check value against correct answer\n       **/\n\n      const correct = questions[number].correct_answer === answer;\n\n      /**\n       *  ! Add score if answer is correct\n       **/\n\n      if (correct) setScore((prev) => prev + 1);\n      /**\n       *  ! Save answer in users answer array\n       **/\n\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n\n      setUserAnswers();\n    }\n  };\n\n  const nextQuestion = () => {};\n\n  return (\n    <div>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n        <button className=\"start\" onClick={startQuiz}>\n          Start\n        </button>\n      ) : null}\n      {!gameOver ? <p className=\"score\">Score:</p> : null}\n      {loading && <p>Loading Questions ...</p>}\n      {!loading && !gameOver && (\n        <QCard\n          questionNr={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n        />\n      )}\n      {!loading &&\n      !gameOver &&\n      userAnswers.length === number + 1 &&\n      number !== TOTAL_QUESTIONS - 1 ? (\n        <button className=\"\" onClick={nextQuestion}>\n          Next Question\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}